{"version":3,"sources":["Components/Loader/Loader.module.css","Services/searchImg-api.js","Components/Searchbar/Searchbar.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/ImageGallery/ImageGallery.jsx","Components/Button/Button.jsx","Components/Loader/Loader.jsx","Components/Modal/Modal.jsx","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","searchQuery","currentPage","perPage","get","then","data","hits","SearchBar","onSubmit","useState","query","setQuery","className","e","preventDefault","currentTarget","reset","type","autoComplete","autoFocus","placeholder","onChange","value","ImageGalleryItem","webformatURL","largeImageURL","onClick","src","alt","ImageGallery","images","map","id","Button","Loader","styles","spinner","color","height","width","modalRoot","document","querySelector","Modal","onClose","children","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","target","defaultProps","App","setImages","setCurrentPage","setSearchQuery","isLoading","setIsLoading","error","setError","largeImgUrl","setLargeImgUrl","fetchArticles","options","searchImgApi","imgData","prState","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","shouldRenderLoadMoreBtn","length","Searchbar","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bed44a75.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Loader_spinner__nvK78\"};","import axios from 'axios';\r\n\r\nconst API_KEY = '20273026-5f41ec9ec9512e6f61de79333';\r\naxios.defaults.baseURL = 'https://pixabay.com/api';\r\n\r\nconst fetchImages = ({\r\n    searchQuery = 'nature',\r\n    currentPage = 1,\r\n    perPage = 12,\r\n}) => {\r\n    return axios\r\n        .get(\r\n            `/?q=${searchQuery}&page=${currentPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=${perPage}`,\r\n        )\r\n        .then(({ data: { hits } }) => hits);\r\n};\r\n\r\nexport default { fetchImages };","import React from 'react';\r\nimport { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SearchBar = ({ onSubmit }) => {\r\n    const [query, setQuery] = useState('');\r\n\r\n    const handleChange = e => {\r\n        setQuery(e.currentTarget.value);\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        onSubmit(query);\r\n        setQuery('');\r\n        e.currentTarget.reset();\r\n    };\r\n\r\n    return (\r\n        <header className=\"Searchbar\">\r\n            <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n                <button type=\"submit\" className=\"SearchForm-button\">\r\n                    <span className=\"SearchForm-button-label\">Search</span>\r\n                </button>\r\n\r\n                <input\r\n                    className=\"SearchForm-input\"\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    placeholder=\"Search images and photos\"\r\n                    onChange={handleChange}\r\n                />\r\n            </form>\r\n        </header>\r\n    );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ webformatURL, largeImageURL, onClick }) => {\r\n    const handleClick = () => {\r\n        onClick(largeImageURL);\r\n    };\r\n\r\n    return (\r\n        <li className=\"ImageGalleryItem\">\r\n            <img\r\n                onClick={handleClick}\r\n                src={webformatURL}\r\n                alt=\"something went wrong\"\r\n                className=\"ImageGalleryItem-image\"\r\n            />\r\n        </li>\r\n    );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n    webformatURL: PropTypes.string.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default ImageGalleryItem;","import ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGallery = ({ images, onClick }) => {\r\n    return (\r\n        <ul className=\"ImageGallery\">\r\n            {images.map(({ id, webformatURL, largeImageURL }) => (\r\n                <ImageGalleryItem\r\n                    onClick={onClick}\r\n                    key={id}\r\n                    webformatURL={webformatURL}\r\n                    largeImageURL={largeImageURL}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n    images: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n        }),\r\n    ).isRequired,\r\n};\r\n\r\nexport default ImageGallery;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onClick }) => {\r\n    return (\r\n        <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n            Load more\r\n        </button>\r\n    );\r\n};\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default Button;","import React from 'react';\r\nimport Spinner from 'react-loader-spinner';\r\nimport styles from './Loader.module.css';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner\r\n            className={styles.spinner}\r\n            type=\"Oval\"\r\n            color=\"#3f51b5\"\r\n            height={50}\r\n            width={50}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Loader;","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nconst Modal = ({ onClose, children }) => {\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    });\r\n\r\n    const handleKeyDown = e => {\r\n        if (e.code === 'Escape') {\r\n            onClose();\r\n        }\r\n    };\r\n\r\n    const handleBackdropClick = e => {\r\n        if (e.currentTarget === e.target) {\r\n            onClose();\r\n        }\r\n    };\r\n\r\n    return createPortal(\r\n        <div className=\"Overlay\" onClick={handleBackdropClick}>\r\n            <div className=\"Modal\">{children}</div>\r\n        </div>,\r\n        modalRoot,\r\n    );\r\n};\r\n\r\nModal.defaultProps = {\r\n    children: null,\r\n};\r\n\r\nModal.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport default Modal;","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport searchImgApi from './Services/searchImg-api';\nimport Searchbar from './Components/Searchbar/Searchbar';\nimport ImageGallery from './Components/ImageGallery/ImageGallery';\nimport Button from './Components/Button/Button';\nimport Loader from './Components/Loader/Loader';\nimport Modal from './Components/Modal/Modal';\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [largeImgUrl, setLargeImgUrl] = useState('');\n\n  useEffect(() => {\n    if (!searchQuery) return;\n    fetchArticles()\n  }, [searchQuery]);\n\n  const onChangeQuery = query => {\n    setSearchQuery(query);\n    setImages([]);\n    setCurrentPage(1);\n    setError(null);\n  };\n\n  const fetchArticles = () => {\n    const options = { currentPage, searchQuery };\n    setIsLoading(true);\n\n    searchImgApi\n      .fetchImages(options)\n      .then(hits => {\n        const imgData = hits.map(({ id, webformatURL, largeImageURL }) => ({\n          id,\n          webformatURL,\n          largeImageURL,\n        }));\n        setImages(prState => [...prState, ...imgData]);\n        setCurrentPage(prState => prState + 1);\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      })\n      .catch(error => setError(error))\n      .finally(() => setIsLoading(false));\n  };\n\n  const openModal = data => {\n    setLargeImgUrl(data);\n  };\n\n  const closeModal = () => {\n    setLargeImgUrl('');\n  };\n\n  const shouldRenderLoadMoreBtn = images.length > 0 && !isLoading;\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={onChangeQuery} />\n      {error && <h2>что-то пошло не так... видимо где-то ошибка</h2>}\n      <ImageGallery images={images} onClick={openModal} />\n      {isLoading && <Loader />}\n      {shouldRenderLoadMoreBtn && <Button onClick={fetchArticles} />}\n      {largeImgUrl && (\n        <Modal onClose={closeModal}>\n          <img src={largeImgUrl} alt=\"Большое изображение\" />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}